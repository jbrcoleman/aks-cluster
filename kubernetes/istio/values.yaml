global:
  hub: docker.io/istio
  tag: 1.20.2
  
  # Enable mutual TLS for the cluster
  mtls:
    enabled: true
  
  # Configure the proxy
  proxy:
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 512Mi

  # Monitoring and telemetry integrations
  telemetry:
    enabled: true
    v2:
      enabled: true
      prometheus:
        enabled: true
      stackdriver:
        enabled: false

# Base Istio components
pilot:
  enabled: true
  autoscaleEnabled: true
  autoscaleMin: 1
  autoscaleMax: 5
  resources:
    requests:
      cpu: 500m
      memory: 2048Mi
    limits:
      cpu: 1000m
      memory: 4096Mi

# Ingress gateway configuration
gateways:
  istio-ingressgateway:
    enabled: true
    autoscaleEnabled: true
    autoscaleMin: 1
    autoscaleMax: 5
    type: LoadBalancer
    ports:
    - name: http2
      port: 80
      targetPort: 8080
    - name: https
      port: 443
      targetPort: 8443
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 2000m
        memory: 1024Mi

# Telemetry addons
tracing:
  enabled: true
  provider: jaeger

# Visualization and monitoring addons
kiali:
  enabled: true
  dashboard:
    grafanaURL: http://grafana.istio-system.svc.cluster.local:3000
    jaegerURL: http://jaeger-query.istio-system.svc.cluster.local:16686

# Prometheus for metrics collection
prometheus:
  enabled: true
  scrapeInterval: 15s

# Grafana for dashboards
grafana:
  enabled: true
  persistence:
    enabled: false
  service:
    type: ClusterIP

# Domain configuration for services - these will be populated by ArgoCD
domains:
  kiali: "kiali.example.com"  # Will be overridden by ArgoCD
  jaeger: "jaeger.example.com"  # Will be overridden by ArgoCD
  prometheus: "prometheus.example.com"  # Will be overridden by ArgoCD
  grafana: "grafana.example.com"  # Will be overridden by ArgoCD
  historicalNetwork: "historical-network.example.com"  # Will be overridden by ArgoCD